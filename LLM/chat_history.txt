By using the function library you are provided. move the arm 5 cm in each direction and print arrived  make sure to move back to home after the task is finished.```python
import rospy
from FunctionLib import FunctionLib

# Initialize ROS node
rospy.init_node("gpt")

# Initialize function library
lib = FunctionLib()

# Helper function to move to a new position based on an offset and print a message
def move_and_print(offset_x, offset_y, offset_z, message):
    # Get the current end effector pose
    current_pose = lib.get_current_end_effector_pose()
    
    # Apply the offsets
    new_x = current_pose[0] + offset_x
    new_y = current_pose[1] + offset_y
    new_z = current_pose[2] + offset_z

    # Move to the new position
    lib.go(new_x, new_y, new_z, current_pose[3], current_pose[4], current_pose[5])

    # Check if end effector reached the target
    target = [new_x, new_y, new_z]
    if lib.check_end_effector_reached_desired_target(target):
        print(message)

# Move 5 cm in each direction and print "arrived"
move_and_print(0.05, 0, 0, "Arrived at +X direction")
move_and_print(-0.05, 0, 0, "Back to original X position")

move_and_print(0, 0.05, 0, "Arrived at +Y direction")
move_and_print(0, -0.05, 0, "Back to original Y position")

move_and_print(0, 0, 0.05, "Arrived at +Z direction")
move_and_print(0, 0, -0.05, "Back to original Z position")

# Move the robot back to the home position
lib.move_to_home_position()
```

### Explanation:
1. **Imports**: The code imports necessary libraries and initializes a ROS node named "gpt".
2. **Function Library Initialization**: An instance of `FunctionLib` is created to access the necessary functions.
3. **Helper Function**:  A helper function `move_and_print` is defined to:
    - Get the current end effector's pose.
    - Apply the specified offsets to move the robot arm in the desired directions (X, Y, Z).
    - Move the robot arm to the new position and print the specified message if the end effector reaches the target.
4. **Movement Commands**: 
    - The robot arm moves 5 cm in the +X direction, checks if it has reached, and prints "Arrived at +X direction".
    - The arm then moves back to its original X position.
    - The process is repeated for the +Y and +Z directions.
5. **Reset to Home**: Finally, the robot arm is moved back to its home position.